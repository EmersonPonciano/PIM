{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = exports.serialize = exports.test = void 0;\nvar _markup = require('./lib/markup');\n\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\nconst FRAGMENT_NODE = 11;\nconst ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\nconst testNode = val => {\n  var _val$hasAttribute;\n  const constructorName = val.constructor.name;\n  const {\n    nodeType,\n    tagName\n  } = val;\n  const isCustomElement = typeof tagName === 'string' && tagName.includes('-') || ((_val$hasAttribute = val.hasAttribute) === null || _val$hasAttribute === void 0 ? void 0 : _val$hasAttribute.call(val, 'is'));\n  return nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement) || nodeType === TEXT_NODE && constructorName === 'Text' || nodeType === COMMENT_NODE && constructorName === 'Comment' || nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment';\n};\nconst test = val => {\n  var _val$constructor;\n  return (val === null || val === void 0 ? void 0 : (_val$constructor = val.constructor) === null || _val$constructor === void 0 ? void 0 : _val$constructor.name) && testNode(val);\n};\nexports.test = test;\nfunction nodeIsText(node) {\n  return node.nodeType === TEXT_NODE;\n}\nfunction nodeIsComment(node) {\n  return node.nodeType === COMMENT_NODE;\n}\nfunction nodeIsFragment(node) {\n  return node.nodeType === FRAGMENT_NODE;\n}\nconst serialize = (node, config, indentation, depth, refs, printer) => {\n  if (nodeIsText(node)) {\n    return (0, _markup.printText)(node.data, config);\n  }\n  if (nodeIsComment(node)) {\n    return (0, _markup.printComment)(node.data, config);\n  }\n  const type = nodeIsFragment(node) ? `DocumentFragment` : node.tagName.toLowerCase();\n  if (++depth > config.maxDepth) {\n    return (0, _markup.printElementAsLeaf)(type, config);\n  }\n  return (0, _markup.printElement)(type, (0, _markup.printProps)(nodeIsFragment(node) ? [] : Array.from(node.attributes).map(attr => attr.name).sort(), nodeIsFragment(node) ? {} : Array.from(node.attributes).reduce((props, attribute) => {\n    props[attribute.name] = attribute.value;\n    return props;\n  }, {}), config, indentation + config.indent, depth, refs, printer), (0, _markup.printChildren)(Array.prototype.slice.call(node.childNodes || node.children), config, indentation + config.indent, depth, refs, printer), config, indentation);\n};\nexports.serialize = serialize;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","serialize","test","_markup","require","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","FRAGMENT_NODE","ELEMENT_REGEXP","testNode","val","_val$hasAttribute","constructorName","constructor","name","nodeType","tagName","isCustomElement","includes","hasAttribute","call","_val$constructor","nodeIsText","node","nodeIsComment","nodeIsFragment","config","indentation","depth","refs","printer","printText","data","printComment","type","toLowerCase","maxDepth","printElementAsLeaf","printElement","printProps","Array","from","attributes","map","attr","sort","reduce","props","attribute","indent","printChildren","prototype","slice","childNodes","children","plugin","_default"],"sources":["C:/Users/asuio/OneDrive/Área de Trabalho/newPIM/node_modules/pretty-format/build/plugins/DOMElement.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', {\r\n  value: true\r\n});\r\nexports.default = exports.serialize = exports.test = void 0;\r\n\r\nvar _markup = require('./lib/markup');\r\n\r\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nconst ELEMENT_NODE = 1;\r\nconst TEXT_NODE = 3;\r\nconst COMMENT_NODE = 8;\r\nconst FRAGMENT_NODE = 11;\r\nconst ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\r\n\r\nconst testNode = val => {\r\n  var _val$hasAttribute;\r\n\r\n  const constructorName = val.constructor.name;\r\n  const {nodeType, tagName} = val;\r\n  const isCustomElement =\r\n    (typeof tagName === 'string' && tagName.includes('-')) ||\r\n    ((_val$hasAttribute = val.hasAttribute) === null ||\r\n    _val$hasAttribute === void 0\r\n      ? void 0\r\n      : _val$hasAttribute.call(val, 'is'));\r\n  return (\r\n    (nodeType === ELEMENT_NODE &&\r\n      (ELEMENT_REGEXP.test(constructorName) || isCustomElement)) ||\r\n    (nodeType === TEXT_NODE && constructorName === 'Text') ||\r\n    (nodeType === COMMENT_NODE && constructorName === 'Comment') ||\r\n    (nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment')\r\n  );\r\n};\r\n\r\nconst test = val => {\r\n  var _val$constructor;\r\n\r\n  return (\r\n    (val === null || val === void 0\r\n      ? void 0\r\n      : (_val$constructor = val.constructor) === null ||\r\n        _val$constructor === void 0\r\n      ? void 0\r\n      : _val$constructor.name) && testNode(val)\r\n  );\r\n};\r\n\r\nexports.test = test;\r\n\r\nfunction nodeIsText(node) {\r\n  return node.nodeType === TEXT_NODE;\r\n}\r\n\r\nfunction nodeIsComment(node) {\r\n  return node.nodeType === COMMENT_NODE;\r\n}\r\n\r\nfunction nodeIsFragment(node) {\r\n  return node.nodeType === FRAGMENT_NODE;\r\n}\r\n\r\nconst serialize = (node, config, indentation, depth, refs, printer) => {\r\n  if (nodeIsText(node)) {\r\n    return (0, _markup.printText)(node.data, config);\r\n  }\r\n\r\n  if (nodeIsComment(node)) {\r\n    return (0, _markup.printComment)(node.data, config);\r\n  }\r\n\r\n  const type = nodeIsFragment(node)\r\n    ? `DocumentFragment`\r\n    : node.tagName.toLowerCase();\r\n\r\n  if (++depth > config.maxDepth) {\r\n    return (0, _markup.printElementAsLeaf)(type, config);\r\n  }\r\n\r\n  return (0, _markup.printElement)(\r\n    type,\r\n    (0, _markup.printProps)(\r\n      nodeIsFragment(node)\r\n        ? []\r\n        : Array.from(node.attributes)\r\n            .map(attr => attr.name)\r\n            .sort(),\r\n      nodeIsFragment(node)\r\n        ? {}\r\n        : Array.from(node.attributes).reduce((props, attribute) => {\r\n            props[attribute.name] = attribute.value;\r\n            return props;\r\n          }, {}),\r\n      config,\r\n      indentation + config.indent,\r\n      depth,\r\n      refs,\r\n      printer\r\n    ),\r\n    (0, _markup.printChildren)(\r\n      Array.prototype.slice.call(node.childNodes || node.children),\r\n      config,\r\n      indentation + config.indent,\r\n      depth,\r\n      refs,\r\n      printer\r\n    ),\r\n    config,\r\n    indentation\r\n  );\r\n};\r\n\r\nexports.serialize = serialize;\r\nconst plugin = {\r\n  serialize,\r\n  test\r\n};\r\nvar _default = plugin;\r\nexports.default = _default;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}